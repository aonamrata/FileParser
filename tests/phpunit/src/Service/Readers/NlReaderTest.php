<?php

namespace FileParser\Service\Readers;

use org\bovigo\vfs\vfsStream;
use org\bovigo\vfs\vfsStreamWrapper;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-28 at 17:25:47.
 */
class NlReaderTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var NlReader
     */
    protected $object;
    protected $file;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new NlReader();
        
        vfsStreamWrapper::register();
        $root = vfsStream::newDirectory('tmp');
        vfsStreamWrapper::setRoot($root);
        $this->file = vfsStream::newFile('items.csv', 0764)
                ->withContent("73-ou-XW46\nApple\n1\na")
                ->at($root);        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $this->object = null;
    }

    /**
     * @covers FileParser\Service\Readers\NlReader::doesSourceExist
     */
    public function testDoesSourceExist() {
        $result = $this->object->doesSourceExist(vfsStream::url('tmp/items.csv'));
        $this->assertTrue($result);
    }

    /**
     * @covers FileParser\Service\Readers\NlReader::readFromSource
     */
    public function testReadFromSource() {
        $result = $this->object->readFromSource(vfsStream::url('tmp/items.csv'));
        $this->assertNotEmpty($result);
        $this->assertEquals(1,count($result));
    }

}
